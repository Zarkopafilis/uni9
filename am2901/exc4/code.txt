MICRO

c Bootstrap
m00 00000 000 000 111 000 011 pcpc pcpc 00 0111010111
m01 00000 000 000 000 000 001 0000 0000 00 0010000000

c LOADBR #K
m02 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m03 00000 000 000 111 000 011 xxxx brbr 00 0110011101
c NEXTINSTR
m04 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m05 00000 000 000 000 000 001 0000 0000 00 0010000000

c LOADSP #K
m06 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m07 00000 000 000 111 000 011 xxxx spsp 00 0110011101
c NEXTINSTR
m08 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m09 00000 000 000 000 000 001 0000 0000 00 0010000000

c LOADLR #K
m0a 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m0b 00000 000 000 111 000 011 xxxx lrlr 00 0110011101
c NEXTINSTR
m0c 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m0d 00000 000 000 000 000 001 0000 0000 00 0010000000

c PUSH $K 
m0e 00000 000 000 101 000 011 xxxx pcpc 01 0111011110 //K at MDR 
m0f 00000 000 000 001 001 001 spsp lrlr 00 0110111011 //cmp sp, lr fixme
m10 00100 011 011 000 000 000 0000 0000 00 0110011110 //jump lower if neq 
c ACTUAL PUSH 
m11 00000 000 000 101 000 011 spsp spsp 01 0110111110 //inc sp
m12 00000 000 000 100 000 001 spsp spsp 00 0111011111 //NOP, SP -> MAR
m13 00000 000 000 111 000 001 xxxx xxxx 00 0100011111 //MDR -> MWE~
c NEXTINSTR
m14 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m15 00000 000 000 000 000 001 0000 0000 00 0010000000

c POP $K 
m16 00000 000 000 001 001 001 spsp brbr 00 0110111011//cmp sp, br
m17 00111 011 011 000 000 000 0000 0000 00 0110011110 //jump lower if neq 
c ACTUAL POP 
m18 00000 000 000 101 000 011 xxxx spsp 01 0111011110 //top of stack at MDR 
m19 00000 000 000 111 000 011 xxxx bbbb 00 0110011101
m1a 00000 000 000 101 000 011 xxxx pcpc 01 0111011110 //K at MDR 
m1b 00000 000 000 111 000 001 xxxx xxxx 00 0111011111 // NOP, K -> MAR
m1c 00000 000 000 100 000 001 bbbb bbbb 00 0100011111 // B -> MWE~
m1d 00000 000 000 101 001 011 spsp spsp 01 0110111110 // dec SP
c NEXTINSTR
m1e 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m1f 00000 000 000 000 000 001 0000 0000 00 0010000000

c ADD 
m20 00000 000 000 101 001 011 spsp bbbb 10 0110011110 //sp - 2 -> B
m21 00000 000 000 001 001 001 bbbb brbr 00 0110111011 // cmp b (sp - 2), br
m22 00111 011 011 000 000 000 0000 0000 00 0110011110//jump lower if neq 
c ACTUAL ADD 
m23 00000 000 000 101 000 011 xxxx spsp 01 0111011110 //top of stack at MDR 
m24 00000 000 000 111 000 011 xxxx bbbb 00 0110011101 //save to b
m25 00000 000 000 101 001 011 spsp spsp 01 0110111110 //dec SP
m26 00000 000 000 101 000 011 xxxx spsp 01 0111011110 //new top of stack at MDR 
m27 00000 000 000 100 000 001 spsp spsp 00 0111011111 //NOP, SP -> MAR
m28 00000 000 000 101 000 001 bbbb bbbb 00 0100011111 // B + mdr -> MWE~
c NEXTINSTR
m29 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m2a 00000 000 000 000 000 001 0000 0000 00 0010000000

c SUB
m2b 00000 000 000 101 001 011 spsp bbbb 10 0110011110 //sp - 2 -> B
m2c 00000 000 000 001 001 001 bbbb brbr 00 0110111011 // cmp b (sp - 2), br
m2d 00111 011 011 000 000 000 0000 0000 00 0110011110//jump lower if neq 
c ACTUAL SUB
m2e 00000 000 000 101 000 011 xxxx spsp 01 0111011110 //top of stack at MDR 
m2f 00000 000 000 111 000 011 xxxx bbbb 00 0110011101 //save to b
m30 00000 000 000 101 001 011 spsp spsp 01 0110111110 //dec SP
m31 00000 000 000 101 000 011 xxxx spsp 01 0111011110 //new top of stack at MDR 
m32 00000 000 000 100 000 001 spsp spsp 00 0111011111 //NOP, SP -> MAR
m33 00000 000 000 101 010 001 bbbb xxxx 00 0100011111 // B - mdr -> MWE~
c NEXTINSTR
m34 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m35 00000 000 000 000 000 001 0000 0000 00 0010000000


MAPPER

c LOADBR
m00 02
c LOADSP 
m01 06
c LOADLR 
m02 0a
c PUSH
m03 0e
c POP
m04 16
c ADD
m05 20
c SUB
m06 2b

MAIN

c LOADBR $STACKSTART
m00 00
m01 $stackstart 
c LOADSP $stackstart 
m02 01
m03 $stackstart 
c LOADLR
m04 02
m05 $STACKSTART + LIMIT

c PUSH
m06 03
m07 $x

c PUSH 
m08 03
m09 $y

c PUSH 
m0a 03 
m0b $z

c ADD 
m0c 05
c SUB 
m0d 06
c POP 
m0e 04
m0f $w
