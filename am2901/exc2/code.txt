MICRO

//Bootstrap
m00 00000 000 000 111 000 011 0000 pcpc 00 0111010111
m01 00000 000 000 000 000 001 0000 0000 00 0010000000

//LDA #K
m02 00000 000 000 101 000 011 xxxx pcpc 01 0111011110 // K at MDR on next clock
m03 00000 000 000 111 000 011 xxxx aaaa 00 0110011101 // K -> Accumulator

//NEXTINSTR
m04 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m05 00000 000 000 000 000 001 0000 0000 00 0010000000

//LDX #K
m06 00000 000 000 101 000 011 xxxx pcpc 01 0111011110 // K at MDR on next clock
m07 00000 000 000 111 000 011 xxxx bbbb 00 0110011101 // K -> B (X - Helper register)
//NEXTINSTR
m08 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m09 00000 000 000 000 000 001 0000 0000 00 0010000000

//LDAX
m0a 00000 000 000 100 000 001 bbbb xxxx 00 0111011111 // B + 0 -> NOP, MAR 
m0b 00000 000 000 111 000 011 xxxx aaaa 00 0110011101 // MDR -> Accumulator
//NEXTINSTR
m0c 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m0d 00000 000 000 000 000 001 0000 0000 00 0010000000

//LDA $K, X 
m0e 00000 000 000 101 000 011 xxxx pcpc 01 0111011110 // K at MDR on next clock
m0f 00000 000 000 101 000 001 xxxx bbbb 00 0101011101 // MDR + B (X) -> MAR 
m10 00000 000 000 111 000 011 xxxx aaaa 00 0110011101 // val -> Accumulator
//NEXTINSTR
m11 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m12 00000 000 000 000 000 001 0000 0000 00 0010000000

//LDA ($K, X)
m13 00000 000 000 101 000 011 xxxx pcpc 01 0111011110 // K at MDR on next clock
m14 00000 000 000 111 000 011 xxxx aaaa 00 0011011101
m15 00000 000 000 101 000 001 xxxx bbbb 00 0101011101 // MDR + B (X) -> MAR 
m16 00000 000 000 111 000 011 xxxx aaaa 00 0110011101 // MDR -> Accumulator
//NEXTINSTR
m17 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m18 00000 000 000 000 000 001 0000 0000 00 0010000000

//STA $K
m19 00000 000 000 101 000 011 xxxx pcpc 01 0111011110 //K
m1a 00000 000 000 111 000 011 xxxx aaaa 00 0011011101 //MEM[K] -> MDR 
m1b 00000 000 000 100 000 001 0000 0000 00 0100011111 //ACC + 0 -> NOP, MWE~
//NEXTINSTR
m1c 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m1d 00000 000 000 000 000 001 0000 0000 00 0010000000

//LDA $K
m1e 00000 000 000 101 000 011 xxxx pcpc 01 0111011110 //K
m1f 00000 000 000 111 000 011 xxxx aaaa 00 0011011101 //MEM[K] -> MDR
m20 00000 000 000 111 000 011 xxxx aaaa 00 0011011101 //MEM[K] -> MDR
m21 00000 000 000 111 000 011 xxxx aaaa 00 0110011101 // MDR -> Accumulator
//NEXTINSTR
m22 00000 000 000 101 000 011 xxxx pcpc 01 0111011110
m23 00000 000 000 000 000 001 0000 0000 00 0010000000

MAPPER

m00 02 //LDA #K
m01 06 //LDX #K
m02 0a //LDAX 
m03 0e //LDA $K, X 
m04 13 //LDA ($K, K)
m05 19 //STA $K
m06 1e //LDA ($K)

MAIN
m00 00 //LDA #FF
m01 ff 
m02 05 //STA $RESULTS(0)
m03 20
m04 01 //LDX #ADDR[DATA(0)]
m05 19
m06 02 //LDAX 
m07 05 //STA $RESULTS(1)
m08 21

//B + K MUST BE #ADDR(DATA[1])
m09 01 //LDX #5
m0a 05
m0b 03 //LDA $ ,X 
m0c 14 //#ADDR(DATA[1]) - #05 => 19 - 05 = 14
m0d 05 //STA $RESULTS(2)
m0e 22

//MEM[K] + B MUST BE #ADDR(DATA[3]) - MEM[K] -> DATA[2] , B -> 01
m0f 01 //LDX #1
m10 01
m11 04 //LDA ($ ,X)
m12 1b //K (m1b points to 1b for ease of use)
m13 05 //STA &RESULTS(3)
m14 23

//LDA($K)
m15 06
m16 1e //data[4] points to data[5]
m17 05 //STA &RESULTS(4)
m18 24

//DATA
m19 fd
m1a fc
m1b 1b
m1c fb
m1e 1f
m1f fa

//RESULTS
m20 00 //ff
m21 00 //fd
m22 00 //fc
m23 00 //fb
m24 00 //fa